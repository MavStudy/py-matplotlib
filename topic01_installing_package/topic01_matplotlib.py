# Почти все, кто использует язык Python в научных целях, сталкивались с двумя
# очень удобными и популярными пакетами:
#
# 1) numpy – для быстрой обработки матриц и векторов, а также эффективных
#    вычислений на уровне многочисленных математических функций;
#
# 2) matplotlib – для построения и отображения графиков самых разных форм
#    и размеров.
#
# Эти два пакета полностью покрывают базовые потребности при научных расчетах
# и визуализации данных. Я бы даже сказал, что они, своего рода, «убийцы»
# известного математического пакета MatLab. Так как Python гораздо лучше
# работает с большими массивами данных и, кроме того, полностью бесплатный.
#
# Команда для установки:
# pip install matplotlib
#
# Так как matplotlib выводит графическую информацию, как правило, на экран
# устройства, то он должен использовать пакет для работы с пользовательским
# интерфейсом. И, действительно, по умолчанию в качестве backend применяется
# модуль:
#
# TkInter
#
# который, как правило, поставляется с самим языком Python. И мы в этом можем
# убедиться. Давайте создадим простейшую программу и, заодно проверим
# корректность установки matplotlib:
import matplotlib


def main():
    print(matplotlib.get_backend())
    # module://backend_interagg

    matplotlib.use('Qt5Agg')
    # В данном случае указан пакет Qt версии 5 для отображения графической
    # информации. Также backend можно «жестко» прописать в файле конфигурации
    # пакета matplotlib, чтобы каждый раз в программе не вызывать функцию
    # use().


if __name__ == '__main__':
    main()
# Поддерживаются следующие backend'ы
# -----------------------------------------------------------------------------
#  Название         |  Описание
# -----------------------------------------------------------------------------
#  Qt5Agg           | Рендеринг графики в Qt5 (требуется PyQt5). В IPython
#                   | активируется командой %matplotlib qt5
# -----------------------------------------------------------------------------
#  ipympl           | Рендеринг графики в в виджете Jupyter (требуется ipympl).
#                   | В IPython активируется командой %matplotlib ipympl
# -----------------------------------------------------------------------------
#  GTK3Agg          | Рендеринг графики в GTK 3.x (требуется PyGObject и
#                   | pycairo или cairocffi). В IPython активируется командой
#                   | %matplotlib gtk3
# -----------------------------------------------------------------------------
#  macosx           | Рендеринг графики в Cocoa. В IPython активируется
#                   | командой %matplotlib osx
# -----------------------------------------------------------------------------
#  TkAgg            | Рендеринг графики в Tk (требуется TkInter). В IPython
#                   | активируется командой %matplotlib tk
# -----------------------------------------------------------------------------
#  nbAgg            | Рендеринг графики в Jupyter notebook. В Jupyter
#                   | активируется командой %matplotlib notebook
# -----------------------------------------------------------------------------
#  WebAgg           | Для использования с торнадо-сервером
# -----------------------------------------------------------------------------
#  GTK3Cairo        | Cairo рендеринг графики в GTK 3.xx (требуется PyGObject
#                   | и pycairo или cairocffi)
# -----------------------------------------------------------------------------
#  Qt4Agg           | Рендеринг графики в Qt4 (требуется PyQt4 или pyside).
#                   | В IPython активируется командой %matplotlib qt4
# -----------------------------------------------------------------------------
#  wxAgg            | Рендеринг графики в wxWidgets (требуется wxPython 4).
#                   | В IPython активируется командой %matplotlib wx
# -----------------------------------------------------------------------------
